#!/bin/bash
#################################################
#Email notification
#SBATCH --mail-user=erika.kroll@rothamsted.ac.uk
#SBATCH --mail-type=ALL
#SBATCH --partition=standard
#SBATCH --qos=medium
#job name
#SBATCH --job-name=hifi
#job stdout file
#SBATCH --output=logs/hifi.out.%J
#job stderr file
#SBATCH --error=logs/hifi.err.%J
#maximum job time in D-HH:MM
#SBATCH --time=1-00:00
#SBATCH --mem-per-cpu=4000
#SBATCH --ntasks=30
#SBATCH --ntasks-per-node=15
#SBATCH --nodes=2
#############################################################
#module load statements 
module load SeqKit/2.2.0
module load hifiasm/0.19.7-GCCcore-12.2.0 

#############################################################

IN_DIR="/home/data/fus_sysbio_ek2020/EK_fg_pangenome/Nanopore_seq_trimmed/trimmed_fastq_2/trimmed/size_filtered"

cd ${IN_DIR}

# Load files into an array and pick the one for this task
FASTQ="over10_CML_3406_bc13.fastq"
BASENAME="CML_3406_bc13"
ASM_DIR="/home/data/fus_sysbio_ek2020/EK_fg_pangenome/Nanopore_assembly/Hifiasm_all/${BASENAME}/"

mkdir -p "$ASM_DIR"

# Run hifiasm
PREFIX="$ASM_DIR/over10.write_reads_Hifi.${BASENAME}.asm"

/home/data/fus_sysbio_ek2020/Tools/hifiasm/hifiasm --ont -o "$PREFIX" --write-ec -t30 -f0 "$FASTQ"

######################################################################################
#./hifiasm -o test -t4 -f0 chr11-2M.fa.gz 2> test.log
#Usage: hifiasm [options] <in_1.fq> <in_2.fq> <...>
#Options:
#  Input/Output:
#    -o STR       prefix of output files [hifiasm.asm]
#    -t INT       number of threads [1]
#    -h           show help information
#    --version    show version number
#  Overlap/Error correction:
#    -k INT       k-mer length (must be <64) [51]
#    -w INT       minimizer window size [51]
#    -f INT       number of bits for bloom filter; 0 to disable [37]
#    -D FLOAT     drop k-mers occurring >FLOAT*coverage times [5.0]
#    -N INT       consider up to max(-D*coverage,-N) overlaps for each oriented read [100]
#    -r INT       round of correction [3]
#    -z INT       length of adapters that should be removed [0]
#    --max-kocc   INT
#                 employ k-mers occurring <INT times to rescue repetitive overlaps [2000]
#    --hg-size    INT(k, m or g)
#                 estimated haploid genome size used for inferring read coverage [auto]
#  Assembly:
#    -a INT       round of assembly cleaning [4]
#    -m INT       pop bubbles of <INT in size in contig graphs [10000000]
#    -p INT       pop bubbles of <INT in size in unitig graphs [0]
#    -n INT       remove tip unitigs composed of <=INT reads [3]
#    -x FLOAT     max overlap drop ratio [0.8]
#    -y FLOAT     min overlap drop ratio [0.2]
#    -i           ignore saved read correction and overlaps
#    -u           post-join step for contigs which may improve N50; 0 to disable; 1 to enable
#                 [1] and [1] in default for the UL+HiFi assembly and the HiFi assembly, respectively
#    --hom-cov    INT
#                 homozygous read coverage [auto]
#    --lowQ       INT
#                 output contig regions with >=INT% inconsistency in BED format; 0 to disable [70]
#    --b-cov      INT
#                 break contigs at positions with <INT-fold coverage; work with '--m-rate'; 0 to disable [0]
#    --h-cov      INT
#                 break contigs at positions with >INT-fold coverage; work with '--m-rate'; -1 to disable [-1]
#    --m-rate     FLOAT
#                 break contigs at positions with <=FLOAT*coverage exact overlaps;
#                 only work with '--b-cov' or '--h-cov'[0.75]
#    --primary    output a primary assembly and an alternate assembly
#  Trio-partition:
#    -1 FILE      hap1/paternal k-mer dump generated by "yak count" []
#    -2 FILE      hap2/maternal k-mer dump generated by "yak count" []
#    -3 FILE      list of hap1/paternal read names []
#    -4 FILE      list of hap2/maternal read names []
#    -c INT       lower bound of the binned k-mer's frequency [2]
#    -d INT       upper bound of the binned k-mer's frequency [5]
#    --t-occ      INT
#                 forcedly remove unitigs with >INT unexpected haplotype-specific reads;
#                 ignore graph topology; [60]
#    --trio-dual  utilize homology information to correct trio phasing errors
#  Purge-dups:
#    -l INT       purge level. 0: no purging; 1: light; 2/3: aggressive [0 for trio; 3 for unzip]
#    -s FLOAT     similarity threshold for duplicate haplotigs in read-level [0.75 for -l1/-l2, 0.55 for -l3]
#    -O INT       min number of overlapped reads for duplicate haplotigs [1]
#    --purge-max  INT
#                 coverage upper bound of Purge-dups [auto]
#    --n-hap      INT
#                 number of haplotypes [2]
#  Hi-C-partition:
#    --h1 FILEs   file names of Hi-C R1  [r1_1.fq,r1_2.fq,...]
#    --h2 FILEs   file names of Hi-C R2  [r2_1.fq,r2_2.fq,...]
#    --seed INT   RNG seed [11]
#    --s-base     FLOAT
#                 similarity threshold for homology detection in base-level;
#                 -1 to disable [0.5]; -s for read-level (see <Purge-dups>)
#    --n-weight   INT
#                 rounds of reweighting Hi-C links [3]
#    --n-perturb  INT
#                 rounds of perturbation [10000]
#    --f-perturb  FLOAT
#                 fraction to flip for perturbation [0.1]
#    --l-msjoin   INT
#                 detect misjoined unitigs of >=INT in size; 0 to disable [500000]
#  Ultra-Long-integration:
#    --ul FILEs   file names of Ultra-Long reads [r1.fq,r2.fq,...]
#    --ul-rate    FLOAT
#                 error rate of Ultra-Long reads [0.2]
#    --ul-tip     INT
#                 remove tip unitigs composed of <=INT reads for the UL assembly [6]
#    --path-max   FLOAT
#                 max path drop ratio [0.6]; higher number may make the assembly cleaner
#                 but may lead to more misassemblies
#    --path-min   FLOAT
#                 min path drop ratio [0.2]; higher number may make the assembly cleaner
#                 but may lead to more misassemblies
#    --ul-cut     INT
#                 filter out <INT UL reads during the UL assembly [0]
#  Dual-Scaffolding:
#    --dual-scaf  output scaffolding
#    --scaf-gap   INT
#                 max gap size for scaffolding [3000000]
#Example: ./hifiasm -o NA12878.asm -t 32 NA12878.fq.gz
